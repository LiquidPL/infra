name: Build uCore image

on:
  schedule:
    - cron: '50 4 * * *' # 4:50am UTC
  push:
    branches:
      - master
    paths:
      - 'ucore/**'
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: ucore
  IMAGE_DESC: Customized uCore image

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Get current date
        id: date
        run: |
          # This generates a timestamp like what is defined on the ArtifactHub documentation
          # E.G: 2022-02-08T15:38:15Z'
          # https://artifacthub.io/docs/topics/repositories/container-images/
          # https://linux.die.net/man/1/date
          echo "date=$(date -u +%Y\-%m\-%d\T%H\:%M\:%S\Z)" >> $GITHUB_OUTPUT

      - name: Set image metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        id: metadata
        with:
          tags: |
            type=raw,value=stable
            type=raw,value=stable.{{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/master/ucore/README.md
            org.opencontainers.image.created=${{ steps.date.outputs.date }}
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.documentation=https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/master/ucore/README.md
            org.opencontainers.image.source=https://github.com/${{ github.repository }}/blob/master/ucore/Containerfile
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}/ucore
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=stable
            io.artifacthub.package.deprecated=false
            io.artifacthub.package.keywords=bootc,ublue,universal-blue
            io.artifacthub.package.license=MIT
            io.artifacthub.package.prerelease=false
            containers.bootc=1
          sep-tags: " "
          sep-annotations: " "

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)

      - name: Verify base image signature
        working-directory: ucore/
        run: |
          set -ouex pipefail
          image=$(grep -i '^FROM ghcr.io' "./Containerfile" | awk '{print $2}')
          echo "Image: ${image}"
          echo "Verifying image with cosign..."
          cosign verify --key https://raw.githubusercontent.com/ublue-os/ucore/refs/heads/main/cosign.pub ${image}

      - name: Build image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          context: ./ucore
          containerfiles: |
            ./ucore/Containerfile
          image: ucore
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          oci: false

      - name: Login to GHCR
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase registry
        id: registry-case
        run: |
          echo "registry=${IMAGE_REGISTRY@L}" >> $GITHUB_OUTPUT

      - name: Push to GHCR
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        id: push
        with:
          registry: ${{ steps.registry-case.outputs.registry }}
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.metadata.outputs.tags }}

      - name: Sign container image
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry-case.outputs.registry }}/${{ env.IMAGE_NAME }}@${DIGEST}
        env:
          DIGEST: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
