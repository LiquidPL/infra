- name: Download Fedora CoreOS image
  ansible.builtin.include_role:
    name: vm.download_image

- name: Create VM
  community.general.proxmox_kvm:
    api_host: '{{ ansible_host }}'
    api_user: '{{ proxmox_username }}'
    api_password: '{{ proxmox_password }}'
    node: '{{ inventory_hostname }}'
    name: '{{ item.hostname }}'
    tags: '{{ item.tags }}'
    machine: q35
    bios: ovmf
    ostype: l26
    kvm: true
    args: '-fw_cfg name=opt/com.coreos/config,file={{ butane_path }}/{{ item.hostname }}.ign'
    cpu: host
    sockets: 1
    cores: '{{ item.cores | default(2) }}'
    memory: '{{ item.memory | default(4096) }}'
    net:
      net0: 'virtio={{ item.mac }},bridge=vmbr0,firewall=1'
    serial:
      serial0: socket
    scsihw: virtio-scsi-single
    agent: true
    efidisk0:
      efitype: 4m
      format: raw
      pre_enrolled_keys: true
      storage: local-zfs
    onboot: true
    state: present
  loop: '{{ nodes }}'
  delegate_to: localhost

- name: Import downloaded image into VM
  community.general.proxmox_disk:
    api_host: '{{ ansible_host }}'
    api_user: '{{ proxmox_username }}'
    api_password: '{{ proxmox_password }}'
    name: '{{ item.hostname }}'
    storage: local-zfs
    media: disk
    disk: scsi0
    import_from: '{{ image_tmp_path }}'
    ssd: true
    format: raw
    discard: true
    iothread: true
    replicate: true
  loop: '{{ nodes }}'
  delegate_to: localhost

- name: Resize image
  community.general.proxmox_disk:
    api_host: '{{ ansible_host }}'
    api_user: '{{ proxmox_username }}'
    api_password: '{{ proxmox_password }}'
    name: '{{ item.hostname }}'
    disk: scsi0
    state: resized
    size: '{{ item.disk_size | default("20G") }}'
  loop: '{{ nodes }}'
  delegate_to: localhost

- name: Change VM boot order to boot from the image
  community.general.proxmox_kvm:
    api_host: '{{ ansible_host }}'
    api_user: '{{ proxmox_username }}'
    api_password: '{{ proxmox_password }}'
    node: '{{ inventory_hostname }}'
    name: '{{ item.hostname }}'
    boot: 'order=scsi0'
    update: true
  loop: '{{ nodes }}'
  delegate_to: localhost

- name: Start VM
  community.general.proxmox_kvm:
    api_host: '{{ ansible_host }}'
    api_user: '{{ proxmox_username }}'
    api_password: '{{ proxmox_password }}'
    name: '{{ item.hostname }}'
    state: started
  loop: '{{ nodes }}'
  delegate_to: localhost
