apiVersion: batch/v1
kind: CronJob
metadata:
  name: offsite-backup-full
spec:
  schedule: '0 3 * * 0'
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: rclone
              image: rclone/rclone:1.71.2@sha256:3103526c506266a9ecdf064efe99bf3677d92ef6407af124d8c56b4f49cbaa51
              imagePullPolicy: IfNotPresent
              command: ['/bin/sh']
              args:
                - -c
                - >-
                    rclone sync --fast-list --progress minio:postgres-immich postgres: &&
                    rclone sync --checksum --fast-list --s3-storage-class DEEP_ARCHIVE --s3-upload-cutoff 0 --transfers 100 --checkers 100 --progress /data/upload/ assets:upload/ &&
                    rclone sync --checksum --fast-list --s3-storage-class DEEP_ARCHIVE --s3-upload-cutoff 0 --transfers 100 --checkers 100 --progress /data/profile/ assets:profile/
              env:
                - name: RCLONE_CONFIG_MINIO_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: minio-secret
                      key: ACCESS_KEY_ID
                - name: RCLONE_CONFIG_MINIO_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: minio-secret
                      key: SECRET_ACCESS_KEY
                - name: RCLONE_CONFIG_AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: offsite-backup-credentials
                      key: awsAccessKeyId
                - name: RCLONE_CONFIG_AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: offsite-backup-credentials
                      key: awsSecretAccessKey
                - name: RCLONE_CRYPT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: offsite-backup-credentials
                      key: encryptionPassword
                - name: RCLONE_CRYPT_PASSWORD2
                  valueFrom:
                    secretKeyRef:
                      name: offsite-backup-credentials
                      key: encryptionSalt
                - name: RCLONE_CONFIG_POSTGRES_REMOTE
                  valueFrom:
                    secretKeyRef:
                      name: offsite-backup-credentials
                      key: dbRemote
                - name: RCLONE_CONFIG_ASSETS_REMOTE
                  valueFrom:
                    secretKeyRef:
                      name: offsite-backup-credentials
                      key: assetsRemote
              resources:
                requests:
                  cpu: 1000m
                  memory: 1Gi
                limits:
                  memory: 2Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
              volumeMounts:
                - name: data
                  mountPath: /data
                  readOnly: true
                - name: rclone-config
                  mountPath: /config/rclone
                  readOnly: true
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile:
              type: RuntimeDefault
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: immich-upload
            - name: rclone-config
              configMap:
                name: offsite-backup-config
